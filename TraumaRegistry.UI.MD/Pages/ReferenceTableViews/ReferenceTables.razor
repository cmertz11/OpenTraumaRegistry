@page "/referencetables"
@page "/referencetables/{tableName}"

@inject NavigationManager NavigationManager
@inject IMatToaster Toaster

@if (table == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <h3><i class="fas fa-table"></i>&nbsp; System Reference Data: @tableName</h3>


    <div class="row">
        <div class="col-5">
            <table class="table table-striped table-hover table-sm">
                <thead>
                    <tr>
                        <th>
                            Id
                        </th>
                        <th>
                            Code
                        </th>
                        <th>
                            Description
                        </th>
                        <th>
                            <MatButton style="float: right;" OnClick="@AddRecord" Icon="add">Add New</MatButton>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var rec in table.TableData)
                    {
                        <tr>
                            <td>@rec.Id</td>
                            <td>@rec.Code</td>
                            <td>@rec.Description</td>
                            <td>
                                <MatButton Icon="edit" @onclick="@(() => EditRecord(rec.Id, rec.Code, rec.Description))">Edit</MatButton>
                                <MatButton Icon="delete" @onclick="@(() => DeleteRecord(rec.Id, rec.Code, rec.Description))">Delete </MatButton>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}


<MatDialog @bind-IsOpen="@dialogIsOpen">
    <MatDialogTitle>@dialogHeader</MatDialogTitle>

        <MatDialogContent>
   
            <MatTextField @bind-Value="@tableRec.Code" Label="Code" ></MatTextField>
 
            <MatTextField @bind-Value="@tableRec.Description" Label="Description" ></MatTextField>

        </MatDialogContent>

    <MatDialogActions>
        <MatButton OnClick="@(e => { dialogIsOpen = false; })">Cancel</MatButton>
        <MatButton OnClick="@SaveRecord">OK</MatButton>
    </MatDialogActions>

</MatDialog>
 


@code {
    [Parameter]
    public string tableName { get; set; }
    string mode = "List";
    string strId = "";

    bool dialogIsOpen = false;
    string dialogHeader = "";


    ReferenceTableClient client = new ReferenceTableClient();
    RefTableDTO table = null;

    RefTable tableRec = new RefTable();

    protected override async Task OnParametersSetAsync()
    {
        table = await client.GetRefTableDataAsync(tableName);
    }

    async Task AddRecord()
    {
        mode = "add";
        strId = "";
        tableRec.Id = 0;
        tableRec.Code = "";
        tableRec.Description = "";
        dialogHeader = "Add new " + tableName + " record.";
        dialogIsOpen = true;
    }

    async Task EditRecord(int Id, string Code, string Description)
    {
        mode = "edit";

        dialogHeader = "Edit " + tableName + " record ";
        strId = Id.ToString();  // <MatTextField can't bind to anything but a string.
        tableRec.Id = Id;
        tableRec.Code = Code;
        tableRec.Description = Description;
        dialogIsOpen = true;
    }

    async Task DeleteRecord(int Id, string Code, string Description)
    {
        mode = "delete";

        strId = Id.ToString();  // <MatTextField can't bind to anything but a string.
        tableRec.Id = Id;
        tableRec.Code = Code;
        tableRec.Description = Description;
        dialogHeader = string.Format("Delete {0} record {1}?", tableName, strId);
        dialogIsOpen = true;
    }

    async Task SaveRecord()
    { 
        try
        {
            if (mode == "edit")
            {
                if (await client.EditRefTableRecordAsync(tableName, tableRec))
                {
                    var Message = string.Format("{0} record updated successfully.", tableName);
                }
            }
            else if (mode == "add")
            {

                var response = await client.AddRefTableRecordAsync(tableName, tableRec);
                if (response)
                {
                    toast(string.Format("{0} record added successfully.", tableName));
                }
            }
            else
            {
                if (await client.DeleteRefTableRecordAsync(tableName, tableRec.Id))
                {
                    toast(string.Format("Record {0} deleted successfully.", tableName));
                }
            }

            table = await client.GetRefTableDataAsync(tableName);
            dialogIsOpen = false;
        }
        catch (Exception ex)
        {
            Toaster.Add(ex.ToString(), MatToastType.Danger, "System Error", "error", null);
        } 
    }

    void toast(string message)
    {
        Toaster.Add(message, MatToastType.Success, "Success", null, null);
    }

}
