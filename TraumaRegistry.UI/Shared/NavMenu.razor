@inject NavigationManager NavigationManager

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Trauma Registry <i class="fas fa-notes-medical"></i></a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>
@if (refTables != null)
{
    <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
        <ul class="nav flex-column">
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="fas fa-home" aria-hidden="true"></span> &nbsp; &nbsp; Home
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="patients">
                    <span class="fas fa-user-injured" aria-hidden="true"></span> &nbsp; &nbsp; Patients
                </NavLink>
            </li>


            @foreach (var item in refTables)
            {
                var local_Table = item;
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="" @onclick="@(()=>ViewTable(item.Code))">
                        <span class="fas fa-cogs" aria-hidden="true"></span> &nbsp; &nbsp; @item.Description
                    </NavLink>
                </li>
            }

           


        </ul>
    </div>
 }
    @code {

        ReferenceTableClient client = new ReferenceTableClient();
        ICollection<ReferenceTables> refTables = null;


        bool collapseNavMenu = true;

        string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

        void ToggleNavMenu()
        {
            collapseNavMenu = !collapseNavMenu;
        }

        protected override async Task OnInitializedAsync()
        {
            var setupClient = new SetupClient();
            bool IsDatabaseConfigured = false;


            if (!NavigationManager.Uri.Contains("/setup"))
            {
                bool.TryParse(await setupClient.IsDatabaseConfiguredAsync(), out IsDatabaseConfigured);
                if (IsDatabaseConfigured)
                {
                    refTables = await client.GetRefTableListAsync();

                    if (refTables == null)
                    {
                        NavigationManager.NavigateTo("/setup");
                    }
                }
                else
                {
                    NavigationManager.NavigateTo("/setup");
                }
            }
        }

        protected async Task ViewTable(string tableName)
        {
            NavigationManager.NavigateTo("/referencetables/" + tableName);
        }
    }
