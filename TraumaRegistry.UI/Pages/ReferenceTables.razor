@page "/referencetables"
@page "/referencetables/{tableName}"

@inject NavigationManager NavigationManager
@inject IModalService Modal


@if (table== null)
{
    <p><em>Loading...</em></p>
}
else
{
 
    <h3><i class="fas fa-table"></i>&nbsp; System Reference Data: @tableName</h3>
 

   <div class="row">
       <div class="col-5">
            <table class="table table-striped table-hover table-sm">
        <thead>
            <tr>
                <th>
                    Id
                </th>
                <th>
                    Code
                </th>
                <th>
                    Description
                </th>

                <th>
                    <button class="btn btn-outline-primary" data-toggle="modal" data-target="#refFormModal" @onclick="@AddRecord">Add New <i class="fas fa-plus"></i></button>
                </th>


            </tr>
        </thead>
        <tbody>
            @foreach (var rec in table.TableData)
            {
                <tr>
                    <td>@rec.Id</td>
                    <td>@rec.Code</td>
                    <td>@rec.Description</td>
                    <td>
                        <button class="btn btn-outline-success btn-sm" @onclick="@(() => EditRecord(rec.Id, rec.Code, rec.Description))">Edit <i class="fas fa-pen"></i></button>
                        <button class="btn btn-outline-danger btn-sm" @onclick="@(() => DeleteRecord(rec.Id, rec.Code, rec.Description))">Delete <i class="fas fa-trash"></i></button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
       </div>
   </div>
}

@code {
    [Parameter]
    public string tableName { get; set; }
    string mode = "List";
    ReferenceTableClient client = new ReferenceTableClient();
    RefTableDTO table = null;

    RefTable tableRec = new RefTable();



    protected override async Task OnInitializedAsync()
    {
        table = await client.GetRefTableDataAsync(tableName);
    }

    async Task AddRecord()
    { 
        var parameters = new ModalParameters();
        parameters.Add("mode", "add");
        parameters.Add("tableName", tableName);
        Modal.Show("Add New Record", typeof(AddEditRefTable), parameters);
    }

    async Task EditRecord(int Id, string Code, string Description)
    {
        var parameters = new ModalParameters();
        parameters.Add("mode", "edit");
        parameters.Add("tableName", tableName);
        parameters.Add("Id", Id);
        parameters.Add("Code", Code);
        parameters.Add("Description", Description);

        Modal.Show(string.Format("Edit Record {0}", Id), typeof(AddEditRefTable), parameters);
    }

    async Task DeleteRecord(int Id, string Code, string Description)
    {
        var parameters = new ModalParameters();
        parameters.Add("mode", "delete");
        parameters.Add("tableName", tableName);
        parameters.Add("Id", Id);
        parameters.Add("Code", Code);
        parameters.Add("Description", Description);

        Modal.Show(string.Format("Delete Record {0}", Id), typeof(AddEditRefTable), parameters);
    }
}
